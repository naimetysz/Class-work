*{
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}
/// variable  declariton//
$fontSize : 1.2rem;
$fontColor : white;
$navBgColor: #30a7c3;
$bgColor:pink;
$bannerBgcolor:hotpink;
$myBorder:2px solid brown;



//// variable usage//

body{
    background-color: $bgColor;
    font-size: $fontSize;
    color: $fontColor;
    
}
//// header///
header{
    align-items: center;
    display: flex;
    justify-content: space-between;
    background-color: $navBgColor;
    padding: 1rem;
    img{
        width: 80px;
        border:$myBorder;
        border-radius: 7px;

    }
    ul{
        li{ padding: 0.5rem;
            display: inline-block;
            &:hover{
                text-decoration: underline; // bulundugun etiketi gosteriri li kullanmak yerine bunu kullan
            }
            
        }
        list-style-type: none;
        
    }
    a{
        color: $fontColor;
        text-decoration: none;
        



    }


}
///////// banner/////
.banner{
    display: flex;
    justify-content: space-between;
    align-items: center;
    background-color: $bannerBgcolor;
    padding: 1rem;
    line-height:2rem;
 aside{
     button{
         padding: 0.5rem;
         border-radius: 5px;
         border: none;
         background-color: $navBgColor;
         margin-top: 0.6rem;
         margin-right: 0.5rem;
         &:hover {
             background-color: pink;
             cursor: pointer;

             
         }

     }
     img{ 
         width: 30%;
         min-width: 250px;
         max-width: 400px;

         

     }
 }

}
///////// CARD /////////////
// burada bir mixin yapisi gorucez bunlarin standart ozellileri var ve bunlar ortak bu kutulari olusturacak bir mixin yazarsak kullanabiliriz temel styli fonksiyon olarak yazabiliriz
// parametre( olarak verilen degerlere fonksiyon olusturyoruz degismesi gerekenler parametre digerleri sabit
@mixin myBox($bigColor, $fontColor,){
    background-color: $bigColor;
    color: $fontColor;
    width: 25%;
    height: 15rem;
    border: $myBorder;
    border-radius: 5px;
}
///// mixin invoke//// include rules kullanilir
.card{
    display: flex;
    gap: 0.5rem;
    padding: 0.7rem;
    
    .card1{
        @include myBox(green,white );

    }
    .card2{
        @include myBox(brown,white )


    }
    .card3{
        @include myBox(yellow,black )


    }
    .card4{
        @include myBox(lightblue,black )

    }
}
///////article extend parametrik degil bir clasta yazilani tekrar terkar cagirmamzi sagliyor mixinden farki parametrik degil 
.article{
    display: flex;
    padding: 1rem;
    gap: 1rem;
    .article1{
        background-color: grey;
        width: 50%;
        border: $myBorder;
        height: 10rem;
        //margin-right: 1rem;
        
    }
    .article2{
        @extend.article1;
        background-color: hotpink;
        border-color: red;
    }
}
///// foooterrrr///
/// sabit oranda artan azalan birseyler varsa for dongusu kullanilabilir classlari tektek yazmiycazda 1 tane for dongusu yazcaz
// 5 clasi dongu ile olusturabilirmiyiz to yaparsak 5 dahil olmuyor through yaparsak 5 dahil oluyor dizi de tanimlanabilir
$textColor:rgb(111, 15, 15),brown,green,darkblue,lightgreen // dizi tanimladim 








//// if else yapisi burada mixin ve extensin icinde kullanilabilir kosula gore rengi degistirdik

$dark:2;

footer{
    p{
        background-color: grey;
        @if $dark==1 {
            background-color: aqua;
         @elseif $dark==2 {
            
         }   
        }
    }
}